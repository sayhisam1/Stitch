"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[273],{77799:function(e){e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates a new World.","params":[{"name":"namespace","desc":"The namespace to use for this world.","lua_type":"string?"}],"returns":[{"desc":"","lua_type":"World"}],"function_type":"static","tags":["constructor"],"source":{"line":45,"path":"src/World/init.lua"}},{"name":"destroy","desc":"Destroys a World. \\nComponents are detached from entities and Systems are stopped.","params":[],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","tags":["destructor"],"source":{"line":67,"path":"src/World/init.lua"}},{"name":"registerComponent","desc":"Registers a new ComponentDefintion to the World.\\n\\nWhen passed as a ModuleScript:\\n- Hot reloading will be enabled\\n- The ComponentDefinition will use the name of the ModuleScript if not provided.","params":[{"name":"componentDefinition","desc":"","lua_type":"ComponentDefinition | ModuleScript"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":87,"path":"src/World/init.lua"}},{"name":"unregisterComponent","desc":"Unregisters a ComponentDefinition from the World.","params":[{"name":"componentResolvable","desc":"","lua_type":"ComponentResolvable"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":97,"path":"src/World/init.lua"}},{"name":"createQuery","desc":"Creates a new EntityQuery.","params":[],"returns":[{"desc":"","lua_type":"EntityQuery"}],"function_type":"method","source":{"line":106,"path":"src/World/init.lua"}},{"name":"addSystem","desc":"Adds a new System to the World.\\n\\nWhen passed as a ModuleScript:\\n- Hot reloading will be enabled\\n- The SystemDefinition will use the name of the ModuleScript if not provided.","params":[{"name":"systemDefinition","desc":"","lua_type":"SystemDefinition | ModuleScript"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":120,"path":"src/World/init.lua"}},{"name":"removeSystem","desc":"Removes a System from the World.","params":[{"name":"systemResolvable","desc":"","lua_type":"SystemDefinition | ModuleScript"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":130,"path":"src/World/init.lua"}},{"name":"addComponent","desc":"Attaches a component to an entity with given data.\\nIf no data is provided, the `.default` property of the ComponentDefinition will be used.","params":[{"name":"componentResolvable","desc":"the type of component to attach","lua_type":"ComponentResolvable"},{"name":"entity","desc":"the entity to attach the component to","lua_type":"Instance | {}"},{"name":"data","desc":"the data to use for the component","lua_type":"{}?"}],"returns":[{"desc":"The added component","lua_type":"{}"}],"function_type":"method","errors":[{"lua_type":"\\"Already exists\\"","desc":"Thrown if the given component already exists on the entity."}],"source":{"line":144,"path":"src/World/init.lua"}},{"name":"getComponent","desc":"Gets the component of the given type attached to the given entity.\\n\\nReturns `nil` if no such component is attached.","params":[{"name":"componentResolvable","desc":"the type of component to attach","lua_type":"ComponentResolvable"},{"name":"entity","desc":"the entity to get component from","lua_type":"Instance | {}"}],"returns":[{"desc":"The attached component","lua_type":"{}?"}],"function_type":"method","source":{"line":157,"path":"src/World/init.lua"}},{"name":"getEntitiesWith","desc":"Gets all entities with the given component type.","params":[{"name":"componentResolvable","desc":"the type of component to get entities with","lua_type":"ComponentResolvable"}],"returns":[{"desc":"all entities in the world with the given component","lua_type":"{any}"}],"function_type":"method","source":{"line":167,"path":"src/World/init.lua"}},{"name":"setComponent","desc":"Sets the data of the given component on the given entity.","params":[{"name":"componentResolvable","desc":"the type of component","lua_type":"ComponentResolvable"},{"name":"entity","desc":"the entity with the component","lua_type":"Instance | {}"},{"name":"data","desc":"the data to set","lua_type":"{}"}],"returns":[{"desc":"The newly set component","lua_type":"{}"}],"function_type":"method","source":{"line":179,"path":"src/World/init.lua"}},{"name":"updateComponent","desc":"Updates (i.e. merges the keys) the data of the given component on the given entity.","params":[{"name":"componentResolvable","desc":"the type of component","lua_type":"ComponentResolvable"},{"name":"entity","desc":"the entity with the component","lua_type":"Instance | {}"},{"name":"data","desc":"the data to merge into the existing data","lua_type":"{}"}],"returns":[{"desc":"The newly updated component","lua_type":"{}"}],"function_type":"method","source":{"line":191,"path":"src/World/init.lua"}},{"name":"removeComponent","desc":"Removes the given component from the given entity.","params":[{"name":"componentResolvable","desc":"the type of component","lua_type":"ComponentResolvable"},{"name":"entity","desc":"the entity with the component","lua_type":"Instance | {}"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":202,"path":"src/World/init.lua"}},{"name":"getComponentAddedSignal","desc":"Returns a Signal that fires with parameters `(componentName, data)`\\nwhenever a component is added to the specified entity.","params":[{"name":"entity","desc":"the entity to listen for","lua_type":"Instance | {}"}],"returns":[{"desc":"The Signal","lua_type":"Signal"}],"function_type":"method","tags":["signal"],"source":{"line":214,"path":"src/World/init.lua"}},{"name":"getComponentChangedSignal","desc":"Returns a Signal that fires with parameters `(componentName, data, previousData)`\\nwhenever a component is changed (i.e. updated or set) on the specified entity.","params":[{"name":"entity","desc":"the entity to listen for","lua_type":"Instance | {}"}],"returns":[{"desc":"The Signal","lua_type":"Signal"}],"function_type":"method","tags":["signal"],"source":{"line":226,"path":"src/World/init.lua"}},{"name":"getComponentRemovingSignal","desc":"Returns a Signal that fires with parameters `(componentName, data)`\\nwhenever a component is about to be removed from the specified entity.","params":[{"name":"entity","desc":"the entity to listen for","lua_type":"Instance | {}"}],"returns":[{"desc":"The Signal","lua_type":"Signal"}],"function_type":"method","tags":["signal"],"source":{"line":238,"path":"src/World/init.lua"}},{"name":"getEntityAddedSignal","desc":"Returns a Signal that fires with parameters `(entity, data)`\\nwhenever the specified component is added to an entity.","params":[{"name":"componentResolvable","desc":"the type of component to listen for","lua_type":"ComponentResolvable"}],"returns":[{"desc":"The Signal","lua_type":"Signal"}],"function_type":"method","tags":["signal"],"source":{"line":250,"path":"src/World/init.lua"}},{"name":"getEntityChangedSignal","desc":"Returns a Signal that fires with parameters `(entity, data, previousData)`\\nwhenever an entity has a change (i.e. updated or set) on the specified component\'s data.","params":[{"name":"componentResolvable","desc":"the type of component to listen for","lua_type":"ComponentResolvable"}],"returns":[{"desc":"The Signal","lua_type":"Signal"}],"function_type":"method","tags":["signal"],"source":{"line":262,"path":"src/World/init.lua"}},{"name":"getEntityRemovingSignal","desc":"Returns a Signal that fires with parameters `(entity, data)`\\nwhenever the specified component is about to be removed from an entity.","params":[{"name":"componentResolvable","desc":"the type of component to listen for","lua_type":"ComponentResolvable"}],"returns":[{"desc":"The Signal","lua_type":"Signal"}],"function_type":"method","tags":["signal"],"source":{"line":274,"path":"src/World/init.lua"}}],"properties":[{"name":"NONE","desc":"Used to set keys to `nil` on `world:addComponent` or `world:updateComponent` calls.\\n```lua\\nworld:updateComponent(\\"someComponent\\", entity, {\\n\\tfoo = World.NONE\\n})\\nworld:getComponent(\\"someComponent\\", entity).foo -- is nil\\n```","lua_type":"UserData","source":{"line":36,"path":"src/World/init.lua"}}],"types":[{"name":"ComponentResolvable","desc":"Used to resolve a component type in World apis. Anywhere you see a `ComponentResolvable`, you can either pass the `ComponentDefinition` table used\\nwhile registering the component, or a string that is the name of the component.","lua_type":"{} | string","source":{"line":13,"path":"src/World/init.lua"}}],"name":"World","desc":"The World class is a collection of entities, components, and systems.\\nIt is the central class that ties all other parts of an ECS together.\\nA game could have many worlds, but normally there is only one world per game.","source":{"line":22,"path":"src/World/init.lua"}}')}}]);