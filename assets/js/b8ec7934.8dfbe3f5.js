"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[423],{93509:function(e){e.exports=JSON.parse('{"functions":[{"name":"onCreate","desc":"Called when the System is added to a World.\\nYou should override this function if you wanted to do some manual setup for the System.","params":[{"name":"world","desc":"The World the System was added to.","lua_type":"World"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":78,"path":"src/World/SystemDefinition.lua"}},{"name":"onUpdate","desc":"Called when the System is updated.\\nYou should override this function to control what happens on each update.","params":[{"name":"world","desc":"The World the System belongs to.","lua_type":"World"},{"name":"...","desc":"The arguments passed to the updateEvent. By default, this is just the time since last update.","lua_type":"any"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":88,"path":"src/World/SystemDefinition.lua"}},{"name":"onDestroy","desc":"Called when the System is removed from the World.\\nYou should override this function if you wanted to do some manual cleanup for the System.","params":[{"name":"world","desc":"The World the System belonged to.","lua_type":"World"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":97,"path":"src/World/SystemDefinition.lua"}}],"properties":[{"name":"name","desc":"Used to identify the System in the World (should be unique).\\n\\nIf `name` is not defined and the SystemDefinition is returned by a ModuleScript,\\nthen registering the ModuleScript will use the name of the ModuleScript.","lua_type":"string?","source":{"line":23,"path":"src/World/SystemDefinition.lua"}},{"name":"priority","desc":"Used to identify the System\'s priority within an updateEvent.\\n\\n**Lower priority values run first.**\\n\\nBy default, the priority is `1000`.","lua_type":"number?","source":{"line":34,"path":"src/World/SystemDefinition.lua"}},{"name":"updateEvent","desc":"The event that the System should listen to for updates. Each time the event fires, the System is updated.\\n\\nBy default, the event is `RunService.Heartbeat`.","lua_type":"RBXScriptSignal?","source":{"line":43,"path":"src/World/SystemDefinition.lua"}}],"types":[],"name":"SystemDefinition","desc":"A SystemDefinition is a table that defines a System. \\n\\nAll SystemDefinition must be added to a World to be used.","source":{"line":12,"path":"src/World/SystemDefinition.lua"}}')}}]);