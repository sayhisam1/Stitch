"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[997],{86275:function(e){e.exports=JSON.parse('{"functions":[],"properties":[{"name":"name","desc":"Used to identify the Component in the World (should be unique).\\n\\nIf `name` is not defined and the ComponentDefinition is returned by a ModuleScript,\\nthen registering the ModuleScript will use the name of the ModuleScript.","lua_type":"string?","source":{"line":45,"path":"src/World/ComponentDefinition.lua"}},{"name":"defaults","desc":"The default data to use when adding a component. If data is provided to `World.addComponent`,\\nthen the data will be merged with the defaults.","lua_type":"{}?","source":{"line":53,"path":"src/World/ComponentDefinition.lua"}},{"name":"validator","desc":"A function that will be called to validate the data when adding or changing a component.\\nShould return true if the data is valid, false otherwise.","lua_type":"((data: {}) -> boolean)?","source":{"line":61,"path":"src/World/ComponentDefinition.lua"}},{"name":"tag","desc":":::info\\nThis property only has an effect when `TagSystem` is added to the World.\\n:::\\n\\nUsed to apply CollectionService tags to the entity the component is attached to\\n(see: `TagSystem` for more details).\\n\\nIf tag is `true`, the tag will be the same as the name of the ComponentDefinition.","lua_type":"boolean? | string?","tags":["special"],"source":{"line":77,"path":"src/World/ComponentDefinition.lua"}},{"name":"replicate","desc":":::info\\nThis property only has an effect when `ReplicationSystem` is added to the World.\\n:::\\n\\nEnables replication of the component (see: `ReplicationSystem` for more details).","lua_type":"boolean?","tags":["special"],"source":{"line":90,"path":"src/World/ComponentDefinition.lua"}},{"name":"destructor","desc":"If set, this function will be called when the component is removed.\\nYou should use this to clean up any resources that were allocated when adding the component (e.g. any event connections).\\nThe function will be passed the entity and the data of the component.\\n\\n:::danger\\nComponent destructors should not yield - this will lead to undefined behavior!\\n:::","lua_type":"(entity, data) -> nil?","source":{"line":103,"path":"src/World/ComponentDefinition.lua"}}],"types":[],"name":"ComponentDefinition","desc":"A ComponentDefinition is a table that defines a Component.\\n\\nAll ComponentDefinitions must be registered to a World before they can be used.\\n\\nExample usage:\\n\\n```lua\\nlocal positionComponent = {\\n\\tname = \\"position\\",\\n\\tdefaults = {\\n\\t\\tx = 0,\\n\\t\\ty = 0,\\n\\t\\tz = 0,\\n\\t},\\n}\\nworld:registerComponent(positionComponent)\\n```","source":{"line":34,"path":"src/World/ComponentDefinition.lua"}}')}}]);